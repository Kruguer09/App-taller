/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.Acceso;
import Modelo.Neumatico;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class ListNeu extends javax.swing.JDialog {

    //Atributos clase neumático
    private int cod;
    private String codTemp;
    private String brand;
    private String neuModel;
    private int width;
    private String widthTemp;
    private String profile;
    private double diameter;
    private String diameterTemp;
    private int ic;
    private String iv;
    private double price;
    private String priceTemp;

    //Objeto de acceso a la base de datos
    private Acceso con;

    //Modelo para la JTable
    private DefaultTableModel model;

    //Listado de neumáticos disponibles
    private List<Neumatico> neuList;

    /**
     * Creates new form ListNeu
     */
    public ListNeu(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //Inicializamos el controlador
        con = new Acceso();
        //Inicializamos la lista donde meteremos los neumáticos que leamos de la base de datos
        neuList = new ArrayList<>();

        //Sacamos los datos e inicializamos la tabla con los datos de la base de datos
        initTable();

    }

    public void initTable() {
        //Inicializamos modelo
        model = new DefaultTableModel();
        //Nombramos las columnas
        String[] columnNames = {"Código", "Marca", "Modelo", "Ancho", "Perfil", "Diametro", "IC", "IV", "Precio"};
        model.setColumnIdentifiers(columnNames);
        model.setRowCount(0);

        //Accedemos a los datos
        neuList = con.readTableNeu();
        if (neuList.size() != 0) {
            for (Neumatico neu : neuList) {
                Object[] rowData = new Object[columnNames.length];
                rowData[0] = neu.getCod();
                rowData[1] = neu.getBrand();
                rowData[2] = neu.getModel();
                rowData[3] = neu.getWidth();
                rowData[4] = neu.getProfile();
                rowData[5] = neu.getDiameter();
                rowData[6] = neu.getIc();
                rowData[7] = neu.getIv();
                rowData[8] = neu.getPrice();
                model.addRow(rowData);
            }
        }

        this.jTNeuList.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTFCodNeuList = new javax.swing.JTextField();
        jTFBrandNeuList = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTFModelNeuList = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTFWidthNeuList = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jCBProfileNeuList = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jTFDiameterList = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jCBICNeuList = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jCBIVNeuList = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jTFPriceNeuList = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTNeuList = new javax.swing.JTable();
        jBUpdateNeu = new javax.swing.JButton();
        jBCancelNeuList = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("LISTADO NEUMÁTICOS");

        jLabel2.setText("Código:");

        jLabel3.setText("Marca:");

        jTFCodNeuList.setEditable(false);

        jTFBrandNeuList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFBrandNeuListKeyTyped(evt);
            }
        });

        jLabel4.setText("Modelo:");

        jLabel5.setText("Ancho:");

        jTFWidthNeuList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFWidthNeuListKeyTyped(evt);
            }
        });

        jLabel6.setText("Perfil:");

        jCBProfileNeuList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCBProfileNeuList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BAJO", "MEDIO", "ALTO" }));

        jLabel7.setText("Diámetro:");

        jTFDiameterList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFDiameterListKeyTyped(evt);
            }
        });

        jLabel8.setText("IC:");

        jCBICNeuList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCBICNeuList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "70", "80", "90", "100", "110", "120" }));

        jLabel9.setText("IV:");

        jCBIVNeuList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCBIVNeuList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "H", "N", "Q", "R", "S", "T", "V", "W", "Y" }));

        jLabel10.setText("Precio:");

        jTFPriceNeuList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFPriceNeuListKeyTyped(evt);
            }
        });

        jTNeuList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTNeuList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Marca", "Modelo", "Ancho", "Perfil", "Diámetro", "IC", "IV", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTNeuList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTNeuListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTNeuList);

        jBUpdateNeu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBUpdateNeu.setForeground(new java.awt.Color(0, 102, 0));
        jBUpdateNeu.setText("ACTUALIZAR");
        jBUpdateNeu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBUpdateNeuActionPerformed(evt);
            }
        });

        jBCancelNeuList.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBCancelNeuList.setForeground(new java.awt.Color(204, 0, 0));
        jBCancelNeuList.setText("CANCELAR");
        jBCancelNeuList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelNeuListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jBUpdateNeu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 265, Short.MAX_VALUE)
                .addComponent(jBCancelNeuList)
                .addGap(130, 130, 130))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(68, 68, 68)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTFBrandNeuList, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                        .addComponent(jTFCodNeuList)
                        .addComponent(jTFModelNeuList, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTFWidthNeuList, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCBProfileNeuList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(103, 103, 103)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(18, 18, 18)
                            .addComponent(jTFDiameterList, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(18, 18, 18)
                            .addComponent(jCBICNeuList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(18, 18, 18)
                            .addComponent(jCBIVNeuList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTFPriceNeuList, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(248, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 316, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBUpdateNeu)
                    .addComponent(jBCancelNeuList))
                .addGap(39, 39, 39))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(96, 96, 96)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jTFDiameterList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel2)
                                                .addComponent(jTFCodNeuList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel3)
                                                .addComponent(jTFBrandNeuList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel7))))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jTFModelNeuList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jCBICNeuList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel8))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jTFWidthNeuList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jCBIVNeuList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(jCBProfileNeuList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jTFPriceNeuList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(332, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTNeuListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTNeuListMouseClicked
        // Cuando hacemos click con el ratón en alguna de las filas
        int row = jTNeuList.rowAtPoint(evt.getPoint());//Cogemos el número de fila
        //Seteamos los campos de edición
        jTFCodNeuList.setText(jTNeuList.getValueAt(row, 0).toString());
        jTFBrandNeuList.setText(jTNeuList.getValueAt(row, 1).toString());
        jTFModelNeuList.setText(jTNeuList.getValueAt(row, 2).toString());
        jTFWidthNeuList.setText(jTNeuList.getValueAt(row, 3).toString());
        String profile = jTNeuList.getValueAt(row, 4).toString();
        if (profile.equalsIgnoreCase("BAJO")) {
            jCBProfileNeuList.setSelectedIndex(0);
        } else if (profile.equalsIgnoreCase("MEDIO")) {
            jCBProfileNeuList.setSelectedIndex(1);
        } else {
            jCBProfileNeuList.setSelectedIndex(2);
        }
        jTFDiameterList.setText(jTNeuList.getValueAt(row, 5).toString());
        //70, 80, 90, 100, 110, 120
        int ic = (int) jTNeuList.getValueAt(row, 6);
        switch (ic) {
            case 70:
                jCBICNeuList.setSelectedIndex(0);
                break;
            case 80:
                jCBICNeuList.setSelectedIndex(1);
                break;
            case 90:
                jCBICNeuList.setSelectedIndex(2);
                break;
            case 100:
                jCBICNeuList.setSelectedIndex(3);
                break;
            case 110:
                jCBICNeuList.setSelectedIndex(4);
                break;
            case 120:
                jCBICNeuList.setSelectedIndex(5);
        }
        //H, N, Q, R, S, T, V, W, Y
        char iv = jTNeuList.getValueAt(row, 7).toString().charAt(0);
        switch (iv) {
            case 'H':
                jCBIVNeuList.setSelectedIndex(0);
                break;
            case 'N':
                jCBIVNeuList.setSelectedIndex(1);
                break;
            case 'Q':
                jCBIVNeuList.setSelectedIndex(2);
                break;
            case 'R':
                jCBIVNeuList.setSelectedIndex(3);
                break;
            case 'S':
                jCBIVNeuList.setSelectedIndex(4);
                break;
            case 'T':
                jCBIVNeuList.setSelectedIndex(5);
                break;
            case 'V':
                jCBIVNeuList.setSelectedIndex(6);
                break;
            case 'W':
                jCBIVNeuList.setSelectedIndex(7);
                break;
            case 'Y':
                jCBIVNeuList.setSelectedIndex(8);
        }
        jTFPriceNeuList.setText(jTNeuList.getValueAt(row, 8).toString());
    }//GEN-LAST:event_jTNeuListMouseClicked

    private void jBUpdateNeuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBUpdateNeuActionPerformed
        codTemp = jTFCodNeuList.getText().trim();
        try {
            cod = Integer.parseInt(codTemp);
        } catch (NumberFormatException e) {
            //Encapsulamos el parseo para que no pete
            //Si meten letras, dado que lo igualamos a 0
            cod = 0;
        }
        brand = jTFBrandNeuList.getText().trim();
        neuModel = jTFModelNeuList.getText().trim();

        widthTemp = jTFWidthNeuList.getText().trim();
        try {
            width = Integer.parseInt(widthTemp);
        } catch (NumberFormatException e) {
            //Encapsulamos el parseo para que no pete
            //Si meten letras, dado que lo igualamos a 0
            width = 0;
        }
        profile = jCBProfileNeuList.getSelectedItem().toString();

        diameterTemp = jTFDiameterList.getText().trim();
        try {
            diameter = Double.parseDouble(diameterTemp);
        } catch (NumberFormatException e) {
            //Encapsulamos el parseo para que no pete
            //Si meten letras, dado que lo igualamos a 0
            diameter = 0;
        }

        ic = Integer.parseInt(jCBICNeuList.getSelectedItem().toString());
        iv = jCBIVNeuList.getSelectedItem().toString();

        priceTemp = jTFPriceNeuList.getText().trim();
        try {
            price = Double.parseDouble(priceTemp);
        } catch (NumberFormatException e) {
            //Encapsulamos el parseo para que no pete
            //Si meten letras, dado que lo igualamos a 0
            price = 0;
        }

        //Varible para guardar confirmación usuario
        int confirm;

        if (!brand.isEmpty() && !neuModel.isEmpty()
                && !(width == 0) && !profile.isEmpty() && !(diameter == 0)
                && !(ic == 0) && !iv.isEmpty() && !(price == 0)) {
            //Verificamos que ningún campo esté vació o que el código del neumático esté disponible
            confirm = JOptionPane.showConfirmDialog(this, "¿Quiere guardar los datos introducidos?", "Confirmar datos", JOptionPane.OK_CANCEL_OPTION);
            //Si acepta
            if (confirm == JOptionPane.OK_OPTION) {
                //Guardamos los datos en un objeto neumatico
                Neumatico neu = new Neumatico(cod, brand, neuModel, width, profile, diameter, ic, iv, price);

                //Lo escribimos            
                if (con.updateNeu(neu)) {
                    JOptionPane.showMessageDialog(this, "¡Neumático actualizado con éxito!");
                    //Actualizamos al tabla
                    initTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Lo sentimos, no han podido actualizarse los datos.");
                }

                //Vaciamos los campos
                jTFCodNeuList.setText("");
                jTFBrandNeuList.setText("");
                jTFModelNeuList.setText("");
                jTFWidthNeuList.setText("");
                jCBProfileNeuList.setSelectedIndex(0);
                jTFDiameterList.setText("");
                jCBICNeuList.setSelectedIndex(0);
                jCBIVNeuList.setSelectedIndex(0);
                jTFPriceNeuList.setText("");

            }
        } else if (con.verifyNeuCod(cod)) {
            JOptionPane.showMessageDialog(this, "CÓDIGO NO DISPONIBLE. \nYa existe un neumático con ese código en nuestra Base de Datos.");
        } else {
            JOptionPane.showMessageDialog(this, "Debe introducir todos los datos del neumático para guardarlo. Para salir sin guardar pulse CANCELAR.");
        }
    }//GEN-LAST:event_jBUpdateNeuActionPerformed

    private void jBCancelNeuListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelNeuListActionPerformed
        //Comprobamos si hay datos seleccionados, es decir, un código seleccionado
        if (!jTFCodNeuList.getText().isEmpty()) {
            int confirm = JOptionPane.showConfirmDialog(this, "Los datos introducidos se borrarán. ¿Desea salir sin guardar?", "Cierre de Listado de Neumáticos", JOptionPane.OK_CANCEL_OPTION);
            //Si acepta
            if (confirm == JOptionPane.OK_OPTION) {
                // Cerramos la ventana
                dispose();
            }
        } else {
            // Si no hay código de neumático seleccionado cerramos la ventana directamente
            dispose();
        }


    }//GEN-LAST:event_jBCancelNeuListActionPerformed

    private void jTFBrandNeuListKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFBrandNeuListKeyTyped
        // Limitar caracteres alfabéticos de entrada
        String brandNeuString = jTFBrandNeuList.getText().trim();
        for (int i = 0; i < brandNeuString.length(); i++) {
            if (Character.isDigit(brandNeuString.charAt(i))) {
                //Si es un valor dígito avisa y no deja escribir
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(null, "Marca incorrecta. Solamente se aceptan valores alfabéticos.");
                //Vaciamos el campo dado que es erróneo
                jTFBrandNeuList.setText("");
            }
        }
    }//GEN-LAST:event_jTFBrandNeuListKeyTyped

    private void jTFWidthNeuListKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFWidthNeuListKeyTyped
        // Limitar caracteres numéricos de entrada
        String widthNeuString = jTFWidthNeuList.getText().trim();
        for (int i = 0; i < widthNeuString.length(); i++) {
            if (Character.isLetter(widthNeuString.charAt(i))) {
                //Si es letra avisa y no deja escribir
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(null, "Ancho incorrecto. Solamente se aceptan números enteros.");
                //Vaciamos el campo dado que es erróneo
                jTFWidthNeuList.setText("");
            }
        }
    }//GEN-LAST:event_jTFWidthNeuListKeyTyped

    private void jTFDiameterListKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFDiameterListKeyTyped
        // Limitar caracteres numéricos de entrada
        String diameterNeuString = jTFDiameterList.getText().trim();
        for (int i = 0; i < diameterNeuString.length(); i++) {
            if (Character.isLetter(diameterNeuString.charAt(i))) {
                //Si es letra avisa y no deja escribir
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(null, "Diámetro incorrecto. Solamente se aceptan valores numéricos.");
                //Vaciamos el campo dado que es erróneo
                jTFDiameterList.setText("");
            }
        }
    }//GEN-LAST:event_jTFDiameterListKeyTyped

    private void jTFPriceNeuListKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPriceNeuListKeyTyped
        // Limitar caracteres numéricos de entrada
        String priceNeuString = jTFPriceNeuList.getText().trim();
        for (int i = 0; i < priceNeuString.length(); i++) {
            if (Character.isLetter(priceNeuString.charAt(i))) {
                //Si es letra avisa y no deja escribir
                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(null, "Precio incorrecto. Solamente se aceptan valores numéricos.");
                //Vaciamos el campo dado que es erróneo
                jTFPriceNeuList.setText("");
            }
        }
    }//GEN-LAST:event_jTFPriceNeuListKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListNeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListNeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListNeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListNeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListNeu dialog = new ListNeu(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCancelNeuList;
    private javax.swing.JButton jBUpdateNeu;
    private javax.swing.JComboBox<String> jCBICNeuList;
    private javax.swing.JComboBox<String> jCBIVNeuList;
    private javax.swing.JComboBox<String> jCBProfileNeuList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFBrandNeuList;
    private javax.swing.JTextField jTFCodNeuList;
    private javax.swing.JTextField jTFDiameterList;
    private javax.swing.JTextField jTFModelNeuList;
    private javax.swing.JTextField jTFPriceNeuList;
    private javax.swing.JTextField jTFWidthNeuList;
    private javax.swing.JTable jTNeuList;
    // End of variables declaration//GEN-END:variables
}
